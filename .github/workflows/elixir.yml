on: push

jobs:
  test:
    runs-on: ${{ matrix.os }}
    name: OTP ${{ matrix.otp }} | Elixir ${{ matrix.elixir }} | OS ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
        otp: [22.3, 23.3]
        elixir: [1.10.4, 1.11.4]

    steps:
      - uses: actions/checkout@v1.0.0
      - uses: actions/setup-elixir@v1.4.2
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Retrieve Mix Dependencies Cache
        uses: actions/cache@v1
        id: mix-cache
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Install Mix Dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get

      - name: Run tests
        run: |
          mix compile --warnings-as-errors
          mix format --check-formatted
          mix coveralls.github
        env:
          MIX_ENV: test
          TOKEN: ${{ secrets.COVERALLS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Retrieve PLT Cache
        uses: actions/cache@v1
        id: plt-cache
        with:
          path: priv/plts
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Create PLTs
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          mix dialyzer --plt

      - name: Run dialyzer
        run: mix dialyzer --no-check
