name: test

on: push

jobs:
  test:
    runs-on: ${{ matrix.os }}
    env:
      MIX_ENV: test
    name: OTP ${{ matrix.otp }} | Elixir ${{ matrix.elixir }} | OS ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        otp: ['22', '23', '24']
        elixir: ['1.10', '1.11', '1.12']

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Retrieve mix dependencies cache
        uses: actions/cache@v2
        id: mix-cache
        with:
          path: deps
          key: ${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Get build cache
        uses: actions/cache@v2
        id: build-cache
        with:
          path: _build/test/
          key: ${{ matrix.otp }}-${{ matrix.elixir }}-build-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Install mix dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
          mix compile --warnings-as-errors

      - name: Run linters
        run: |
          mix format --check-formatted
          mix credo --strict

      - name: Run tests
        run: mix coveralls.github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Retrieve PLT cache
        uses: actions/cache@v1
        id: plt-cache
        with:
          path: priv/plts
          key: ${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Create PLTs
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          mix dialyzer --plt

      - name: Run dialyzer
        run: mix dialyzer --no-check
